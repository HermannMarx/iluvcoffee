name: CI
'on': push
env:
  NODE_VERSION: 16
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: "npm-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}"
          restore-keys: 'npm-${{ env.NODE_VERSION }}-'
          run: npm install
      - name: Run test pipeline
        run: npm ci
      - name: Run build
        run: npm run build --if-present
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: "npm-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}"
          restore-keys: 'npm-${{ env.NODE_VERSION }}-'
          run: npm install
      - name: Run test pipeline
        run: npm ci
      - name: Run build
        run: npm run build --if-present
      - name: Run test
        run: npm run test
  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '${{ env.NODE_VERSION }}'
      - name: Cache node_modules
        id: npm-cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: "npm-${{ env.NODE_VERSION }}-${{ hashFiles('package-lock.json') }}"
          restore-keys: 'npm-${{ env.NODE_VERSION }}-'
          run: npm install
      - name: Run test pipeline
        run: npm ci
      - name: Run build
        run: npm run build --if-present
      - name: Run type check
        run: npx tsc -p tsconfig.json --noEmit

        jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'nestjs-iluvcoffee' #Must be unique in Heroku
          heroku_email: 'marxhermann@web.de'
